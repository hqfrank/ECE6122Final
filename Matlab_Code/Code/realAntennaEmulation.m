%MATLAB Code from Sensor Array Analyzer App

%Generated by MATLAB 9.4 and Phased Array System Toolbox 3.6

%Generated on 19-Jul-2018 16:41:26

% Create a uniform hexagonal array
Nside = 5;
delta = 0.0075;
rows = [1:Nside Nside-1:-1:1];
Radius = delta * (Nside - 1);
pos = zeros(3,1);
count = 0;
for idx = 1:length(rows)
    y = -Radius/2 - (rows(idx)-1)*delta*0.5 : delta : ...
        Radius/2 + (rows(idx)-1)*delta*0.5;
    pos(2, count+1:count+length(y)) = y;
    pos(3, count+1:count+length(y)) = sqrt(3)/2*Radius - ...
        (idx-1)*delta*sind(60);
    count = count+length(y);
end
h = phased.ConformalArray('ElementPosition', pos, ...
    'ElementNormal', zeros(2,61));
%Calculate Taper
wind = ones(1,61);
h.Taper = wind;
%Create Isotropic Antenna Element
el = phased.IsotropicAntennaElement;
el.BackBaffled = true;
h.Element = el;
%Assign frequencies and propagation speed
F = 60000000000;
PS = 300000000;
%Create figure, panel, and axes
fig = figure;
panel = uipanel('Parent',fig);
hAxes = axes('Parent',panel,'Color','none');
NumCurves = length(F);
%Plot 2d graph
fmt = 'polar';
cutAngle = 0;
pattern(h, F, -180:180, cutAngle, 'PropagationSpeed', PS, 'Type', ...
    'directivity', 'CoordinateSystem', fmt );
%Create legend
legend_string = cell(1,NumCurves);
lines = findobj(gca,'Type','line');
for idx = 1:NumCurves
    [Fval, ~, Fletter] = engunits(F(idx));
    legend_string{idx} = [num2str(Fval) Fletter 'Hz; No Steering'];
end
legend(legend_string, 'Location', 'southeast');
